{
  "name"        : "wpgs-npm-nginx-frontend",
  "version"     : "1.0.0",
  "description" : "The getting started Webpack with NPM and NGINX Docker container.",
  "homepage"    : "https://github.com/b0gg4rd/wpgs-npm-nginx-frontend#readme",
  "author"      : "boggard@hotmail.com",
  "license"     : "ISC",
  "private"     : true,

  "devDependencies": {
    "npm-run-all"       : "4.1.5",
    "onchange"          : "6.1.0",
    "pug-cli"           : "1.0.0-alpha6",
    "stylus"            : "0.54.7",
    "webpack"           : "4.41.5",
    "webpack-cli"       : "3.3.10",
    "lodash"            : "4.16.6"
  },

  "config": {
    "container_name" : "wpgs"
  },

  "scripts": {
    "postinstall"       : "mkdir -p dist",

    "onchange:help"     : "onchage --help",
    "npm-run-all:help"  : "npm-run-all --help",
    "pug:help"          : "pug --help",
    "stylus:help"       : "stylus --help",
    "webpack:help"      : "webpack --help",

    "pug"               : "pug -o dist src",
    "build:pug"         : "run-s pug build:js restart",
    "watch:pug"         : "onchange 'src/**/*.pug' -- npm run build:pug",

    "stylus"            : "stylus -o dist src",
    "build:styl"        : "run-s stylus build:js restart",
    "watch:styl"        : "onchange 'src/**/*.styl' -- npm run build:styl",

    "build:js"          : "webpack --config webpack.config.js",
    "watch:js"          : "onchange 'src/**/*.js' -- npm run build:js",

    "build:image"       : "./scripts.sh image $npm_config_build_profile",
    "build:container"   : "run-s stop:container build:image start:container",
    "watch:container"   : "onchange 'docker/**/*.conf' -- npm run build:container",
    "start:container"   : "./scripts.sh container start",
    "stop:container"    : "./scripts.sh container stop",
    "restart:container" : "./scripts.sh container restart",

    "restart"           : "run-s restart:container",

    "clean"             : "rm -rf dist/*",

    "build"             : "run-s pug stylus build:js build:container",
    "build:watch"       : "run-p watch:*",

    "prestart"          : "run-s clean stop:container build",
    "start"             : "run-p build:watch"
  }
}
